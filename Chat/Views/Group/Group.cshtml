@model IEnumerable<Chat.ServiceReferenceWcf.GroupMessage>
@{
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <title></title>
</head>
<body>
    <h2>Group Chat</h2>

    <div class="main">

        <div id="chatBody">
            <div id="header"></div>
            <div id="inputForm">
                <input type="text" id="message" />
                <input type="button" id="sendmessage" value="Отправить" />
            </div>
            @foreach (var groupMess in Model)
            {
            <div style="color:@groupMess.GroupMessageColor; font:200;" id="history">
                @groupMess.GroupMessageName : @groupMess.GroupMessageText <br/>
            </div>
            }
            <div style="color:@ViewData["SenderColor"];" id="chatroom"></div>
            
            <div id="chatusers">
                <p><b>Все пользователи</b></p>
            </div>
        </div>
        <input id="hdId" type="hidden" />
        <input id="username" type="hidden" />
    </div>

    <script src="~/Scripts/jquery-3.4.1.min.js"></script>
    <script src="~/Scripts/jquery.signalR-2.4.3.min.js"></script>
    <script src="~/signalr/hubs"></script>
    <script>
        $(function () {

            // Ссылка на автоматически-сгенерированный прокси хаба
            var chat = $.connection.chatHub;
            // Объявление функции, которая хаб вызывает при получении сообщений
            chat.client.addMessage = function (name, message, color) {
                // Добавление сообщений на веб-страницу
                $('#chatroom').append('<span style="color:' + htmlEncode(color) + '"><b>' +htmlEncode(name)+'</b>: '+htmlEncode(message)+'</span><br/>');
            };
            // Функция, вызываемая при подключении нового пользователя
            chat.client.onConnected = function (id, userName, allUsers) {

                $('#loginBlock').hide();
                $('#chatBody').show();
                // установка в скрытых полях имени и id текущего пользователя
                $('#hdId').val(id);
                $('#username').val(userName);
                $('#header').html('<h3>Добро пожаловать, ' + userName + '</h3>');

                // Добавление всех пользователей
                for (i = 0; i < allUsers.length; i++) {

                    AddUser(allUsers[i].ConnectionId, allUsers[i].Name);
                }
            }
            // Добавляем нового пользователя
            chat.client.onNewUserConnected = function (id, name) {
                AddUser(id, name);
            }
            // Удаляем пользователя
            chat.client.onUserDisconnected = function (id, userName) {

                $('#' + id).remove();
            }
            // Открываем соединение
            $.connection.hub.start().done(function () {
               // console.log(ViewData["SenderColor"])
                $('#sendmessage').click(function () {
                    // Вызываем у хаба метод Send
                    chat.server.send('@ViewData["SenderId"]', '@ViewData["SenderName"]', '@ViewData["SenderColor"]', $('#message').val());
                    $('#message').val('');
                });
                // обработка логина
                $("#btnLogin").click(function () {

                    var name = $("#txtUserName").val();
                    if (name.length > 0) {
                        chat.server.connect(name);
                    }
                    else {
                        alert("Введите имя");
                    }
                });
            });
        });
        // Кодирование тегов
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
        //Добавление нового пользователя
        function AddUser(id, name) {
            var userId = $('#hdId').val();

            if (userId != id) {
                $("#chatusers").append('<p id="' + id + '"><b>' + name + '</b></p>');
            }
        }
    </script>
</body>
</html>